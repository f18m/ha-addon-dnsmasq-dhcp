---
# inside feature branches it's handy to change the 'version' field to match the branch name
# as reported by the Github Action workflow 'publish.yaml', so that you can force HomeAssistant
# to use the docker image of that feature branch instead of the docker image of 'main', by pointing
# HomeAssistant to that feature branch
version: beta
slug: dnsmasq-dhcp-beta
name: Dnsmasq-DHCP BETA
description: A DHCP server based on dnsmasq
url: https://github.com/f18m/ha-addon-dnsmasq-dhcp-server/tree/main
advanced: true
arch:
  - armhf
  - armv7
  - aarch64
  - amd64
  - i386
host_network: true
image: ghcr.io/f18m/{arch}-addon-dnsmasq-dhcp
init: false
ingress: true
ingress_port: 8100
panel_icon: mdi:ip-network-outline
panel_title: DHCP
options:
  default_lease: 1h
  # the address reservation lease might also be 'infinite' but this is discouraged since
  # it means that the dHCP clients will never come back to this server to ACK their IP
  # and this makes the whole DHCP server less useful... it's better to force the clients
  # to some frequent check-in, since that becomes a basic heartbeat / client health check.
  address_reservation_lease: 1h
  network:
    broadcast: 192.168.1.255
    gateway: 192.168.1.254
    interface: enp1s0
    netmask: 255.255.255.0
    dns:
      - 8.8.8.8
      - 8.8.4.4
    ntp:
      # define NTP servers to provide to DHCP clients (not all clients will honor this setting though)
      # example1: online NTP servers: check https://www.ntppool.org/zone/@ for details about continental zones:
      - 0.europe.pool.ntp.org
      - 1.europe.pool.ntp.org
      - 2.europe.pool.ntp.org
      # example2: another way to go is to use Google NTP:
      #- time1.google.com
      #- time2.google.com
      #- time3.google.com
      # example3: the entry 0.0.0.0 means "the address of the machine running dnsmasq"
      #- 0.0.0.0
  dhcp_range:
    start_ip: 192.168.1.50
    end_ip: 192.168.1.250
  ip_address_reservations: 
    - mac: aa:bb:cc:dd:ee:ff
      name: "An-important-host-with-reserved-IP"
      ip: 192.168.1.15
      # the 'link' property accepts a basic golang template. Available variables are 'mac', 'name' and 'ip'
      link: "http://{{ ip }}/landing/page"
  dhcp_clients_friendly_names:
    - mac: dd:ee:aa:dd:bb:ee
      name: "This is a friendly name to label this host, even if it gets a dynamic IP"
      # the 'link' property accepts a basic golang template. Available variables are 'mac', 'name' and 'ip'
      link: "http://{{ ip }}/landing/page/for/this/dynamic/host"
  log_dhcp: true
  log_web_ui: false
  # this addon uses "host_network: true" so the internal HTTP server will bind on the interface
  # provided as network.interface and will occupy a port there; the following parameter makes
  # that port configurable to avoid conflicts with other services
  web_ui_port: 8976
  # the addon can detect whether the server which is running the addon has just rebooted;
  # if that's the case and the following flag is set to "true", then the DHCP lease database
  # is reset before starting the DHCP server; this is useful in case a loss of power of the
  # HomeAssistant server means also a loss of power of several/all DHCP clients. In such a case
  # the old DHCP lease database is not useful and actually misleading.
  reset_dhcp_lease_database_on_reboot: false
schema:
  default_lease: str
  address_reservation_lease: str
  network:
    broadcast: str
    gateway: str
    interface: str
    netmask: str
    dns:
      - str
    ntp:
      - str
  dhcp_range:
    start_ip: str
    end_ip: str
  ip_address_reservations:
    - ip: str
      mac: match(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
      # the name in this case must be a valid hostname as per RFC 1123 since it is passed to dnsmasq
      # that will refuse to start if an invalid hostname format is used
      name: match(^[a-zA-Z0-9\-.]*$)
      link: str
  dhcp_clients_friendly_names:
    - mac: match(^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$)
      name: str
      link: str
  log_dhcp: bool
  log_web_ui: bool
  web_ui_port: int
  reset_dhcp_lease_database_on_reboot: bool
startup: system
privileged:
  - NET_ADMIN
